/// Generated - Do Not Edit
namespace Static.Class
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using System.Threading.Tasks;
    using EventHorizon.Blazor.Interop;
    using EventHorizon.Blazor.Interop.Callbacks;
    using EventHorizon.Blazor.Interop.ResultCallbacks;
    using Microsoft.JSInterop;

    
    
    [JsonConverter(typeof(CachedEntityConverter<ExampleClass>))]
    public class ExampleClass : CachedEntityObject
    {
        #region Static Accessors

        #endregion

        #region Static Properties

        #endregion

        #region Static Methods

        #endregion

        #region Accessors

        #endregion

        #region Properties

        #endregion
        
        #region Constructor
        public ExampleClass() : base() { }

        public ExampleClass(
            ICachedEntity entity
        ) : base(entity)
        {
            ___guid = entity.___guid;
        }


        #endregion

        #region Methods
        public Style nullableClassStyle()
        {
            return EventHorizonBlazorInterop.FuncClass<Style>(
                entity => new Style() { ___guid = entity.___guid },
                new object[]
                {
                    new string[] { this.___guid, "nullableClassStyle" }
                }
            );
        }

        public decimal nullableGenericNumber()
        {
            return EventHorizonBlazorInterop.Func<decimal>(
                new object[]
                {
                    new string[] { this.___guid, "nullableGenericNumber" }
                }
            );
        }

        public void orderNullArguments(Animatable[] animatables, Scene scene = null, ActionResultCallback<CachedEntity, Node> targetConverter = null)
        {
            EventHorizonBlazorInterop.Func<CachedEntity>(
                new object[]
                {
                    new string[] { this.___guid, "orderNullArguments" }, scene, animatables, targetConverter
                }
            );
        }

        public ExampleClass undefinedStringArgument(string name = null)
        {
            return EventHorizonBlazorInterop.FuncClass<ExampleClass>(
                entity => new ExampleClass() { ___guid = entity.___guid },
                new object[]
                {
                    new string[] { this.___guid, "undefinedStringArgument" }, name
                }
            );
        }

        public LinesMesh mixedUndefinedAndOptional(string name, Vector3[] points, Scene scene = null, System.Nullable<bool> updatable = null, LinesMesh instance = null)
        {
            return EventHorizonBlazorInterop.FuncClass<LinesMesh>(
                entity => new LinesMesh() { ___guid = entity.___guid },
                new object[]
                {
                    new string[] { this.___guid, "mixedUndefinedAndOptional" }, name, points, scene, updatable, instance
                }
            );
        }
        #endregion
    }
}