/// Generated - Do Not Edit
namespace Examples
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using System.Threading.Tasks;
    using EventHorizon.Blazor.Interop;
    using EventHorizon.Blazor.Interop.Callbacks;
    using EventHorizon.Blazor.Interop.ResultCallbacks;
    using Microsoft.JSInterop;

    
    
    [JsonConverter(typeof(CachedEntityConverter<ExampleClass>))]
    public class ExampleClass : CachedEntityObject
    {
        #region Static Accessors

        #endregion

        #region Static Properties

        #endregion

        #region Static Methods

        #endregion

        #region Accessors

        #endregion

        #region Properties
        private Vector3 __ref;
        public Vector3 @ref
        {
            get
            {
            if(__ref == null)
            {
                __ref = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "ref",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __ref;
            }
            set
            {
__ref = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "ref",
                    value
                );
            }
        }

        private Vector3 __lock;
        public Vector3 @lock
        {
            get
            {
            if(__lock == null)
            {
                __lock = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "lock",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __lock;
            }
            set
            {
__lock = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "lock",
                    value
                );
            }
        }

        private Vector3 __unlock;
        public Vector3 @unlock
        {
            get
            {
            if(__unlock == null)
            {
                __unlock = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "unlock",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __unlock;
            }
            set
            {
__unlock = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "unlock",
                    value
                );
            }
        }

        private Vector3 __object;
        public Vector3 @object
        {
            get
            {
            if(__object == null)
            {
                __object = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "object",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __object;
            }
            set
            {
__object = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "object",
                    value
                );
            }
        }

        private Vector3 __event;
        public Vector3 @event
        {
            get
            {
            if(__event == null)
            {
                __event = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "event",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __event;
            }
            set
            {
__event = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "event",
                    value
                );
            }
        }

        private Vector3 __bool;
        public Vector3 @bool
        {
            get
            {
            if(__bool == null)
            {
                __bool = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "bool",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __bool;
            }
            set
            {
__bool = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "bool",
                    value
                );
            }
        }

        private Vector3 __virtual;
        public Vector3 @virtual
        {
            get
            {
            if(__virtual == null)
            {
                __virtual = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "virtual",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __virtual;
            }
            set
            {
__virtual = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "virtual",
                    value
                );
            }
        }

        private Vector3 __string;
        public Vector3 @string
        {
            get
            {
            if(__string == null)
            {
                __string = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "string",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __string;
            }
            set
            {
__string = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "string",
                    value
                );
            }
        }

        private Vector3 __this;
        public Vector3 @this
        {
            get
            {
            if(__this == null)
            {
                __this = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "this",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __this;
            }
            set
            {
__this = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "this",
                    value
                );
            }
        }

        private Vector3 __params;
        public Vector3 @params
        {
            get
            {
            if(__params == null)
            {
                __params = EventHorizonBlazorInterop.GetClass<Vector3>(
                    this.___guid,
                    "params",
                    (entity) =>
                    {
                        return new Vector3() { ___guid = entity.___guid };
                    }
                );
            }
            return __params;
            }
            set
            {
__params = null;
                EventHorizonBlazorInterop.Set(
                    this.___guid,
                    "params",
                    value
                );
            }
        }
        #endregion
        
        #region Constructor
        public ExampleClass() : base() { }

        public ExampleClass(
            ICachedEntity entity
        ) : base(entity)
        {
            ___guid = entity.___guid;
        }


        #endregion

        #region Methods

        #endregion
    }
}