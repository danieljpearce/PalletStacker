@page "/"
@using EventHorizon.Blazor.BabylonJS.Data

<div>
    <EditForm Model="@boxDimensions" OnSubmit="@SubmitEventHandler">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-md-6"> 
                <div class="row" style="margin-top:10px">
                    <div class="col-md-2">
                        <label for="Box Width">Box Width</label>
                        <input type="text" class="form-control" id="boxWidth" @bind-value="@boxDimensions.boxX"/>
                        <ValidationMessage For="@(()=>boxDimensions.boxX)" />
                    </div>       
                    <div class="col-md-2">
                        <label for="Box Height">Box Height</label>
                        <input type="text" class="form-control" id="boxHeight" @bind-value="@boxDimensions.boxY"/>
                        <ValidationMessage For="@(()=>boxDimensions.boxY)" />
                    </div>    
                    <div class="col-md-2">
                        <label for="Box Length">Box Length</label>
                        <input type="text" class="form-control" id="boxLength" @bind-value="@boxDimensions.boxZ"/>
                        <ValidationMessage For="@(()=>boxDimensions.boxZ)" />
                    </div>
                    <div class="col-md-2">
                        <label for="Staircase Algo">Staircase Algo</label>
                        <input type="checkbox" class="form-control" id="useStaircase" @bind-value="@boxDimensions.useStaircase"/>
                        <ValidationMessage For="@(()=>boxDimensions.boxZ)" />
                    </div>
                    <button type="submit" class="btn btn-info" Style="margin-top:10px">Generate Pallet</button>
        
              </div>
            </div>
        </div>
             @if (displayValidationErrorMessages)
            {
                <div class="col-md-4" style="margin-top:10px">
                    <label>Validation Messages: </label>
                    <ValidationSummary />
                </div>
            }
        </EditForm>
</div>
<canvas id="game-window" style="width:100%"></canvas>

@code {

    boxDimensions boxDimensions = new boxDimensions();
    EditContext context;


    protected override Task OnInitializedAsync()
    {
        context = new EditContext(boxDimensions);
        return base.OnInitializedAsync();
    }

    bool displayValidationErrorMessages = false;
    bool successfulFormInput = false;
    bool firstSubmit = true;

    TaskCompletionSource<bool> formSubmit = new TaskCompletionSource<bool>();
    private async void SubmitEventHandler(EditContext context)
    {

        if (context.Validate())
        {
            
        firstSubmit = false;
        formSubmit?.TrySetResult(true);
        displayValidationErrorMessages = false;
        successfulFormInput = true;
        Console.WriteLine("First Submit");
            
        }
        else
        {
            displayValidationErrorMessages = true;
            successfulFormInput = false;
        }
    }
  
}